<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaoma.mapper.PaymentInfoMapper">
  <resultMap id="BaseResultMap" type="com.xiaoma.pojo.PaymentInfo">
    <!--@mbg.generated-->
    <!--@Table payment_info-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="order_sn" jdbcType="VARCHAR" property="orderSn" />
    <result column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="alipay_trade_no" jdbcType="VARCHAR" property="alipayTradeNo" />
    <result column="total_amount" jdbcType="DECIMAL" property="totalAmount" />
    <result column="subject" jdbcType="VARCHAR" property="subject" />
    <result column="payment_status" jdbcType="VARCHAR" property="paymentStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="confirm_time" jdbcType="TIMESTAMP" property="confirmTime" />
    <result column="callback_content" jdbcType="VARCHAR" property="callbackContent" />
    <result column="callback_time" jdbcType="TIMESTAMP" property="callbackTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, order_sn, order_id, alipay_trade_no, total_amount, subject, payment_status, create_time, 
    confirm_time, callback_content, callback_time
  </sql>
  <select id="selectByExample" parameterType="com.xiaoma.pojo.PaymentInfoExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from payment_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from payment_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from payment_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.xiaoma.pojo.PaymentInfoExample">
    <!--@mbg.generated-->
    delete from payment_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.xiaoma.pojo.PaymentInfo" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into payment_info (order_sn, order_id, alipay_trade_no, 
      total_amount, subject, payment_status, 
      create_time, confirm_time, callback_content, 
      callback_time)
    values (#{orderSn,jdbcType=VARCHAR}, #{orderId,jdbcType=VARCHAR}, #{alipayTradeNo,jdbcType=VARCHAR}, 
      #{totalAmount,jdbcType=DECIMAL}, #{subject,jdbcType=VARCHAR}, #{paymentStatus,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{confirmTime,jdbcType=TIMESTAMP}, #{callbackContent,jdbcType=VARCHAR}, 
      #{callbackTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.xiaoma.pojo.PaymentInfo" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into payment_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderSn != null">
        order_sn,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="alipayTradeNo != null">
        alipay_trade_no,
      </if>
      <if test="totalAmount != null">
        total_amount,
      </if>
      <if test="subject != null">
        subject,
      </if>
      <if test="paymentStatus != null">
        payment_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="confirmTime != null">
        confirm_time,
      </if>
      <if test="callbackContent != null">
        callback_content,
      </if>
      <if test="callbackTime != null">
        callback_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderSn != null">
        #{orderSn,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="alipayTradeNo != null">
        #{alipayTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="totalAmount != null">
        #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="subject != null">
        #{subject,jdbcType=VARCHAR},
      </if>
      <if test="paymentStatus != null">
        #{paymentStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="confirmTime != null">
        #{confirmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="callbackContent != null">
        #{callbackContent,jdbcType=VARCHAR},
      </if>
      <if test="callbackTime != null">
        #{callbackTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xiaoma.pojo.PaymentInfoExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from payment_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update payment_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.orderSn != null">
        order_sn = #{record.orderSn,jdbcType=VARCHAR},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.alipayTradeNo != null">
        alipay_trade_no = #{record.alipayTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.totalAmount != null">
        total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.subject != null">
        subject = #{record.subject,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentStatus != null">
        payment_status = #{record.paymentStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.confirmTime != null">
        confirm_time = #{record.confirmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.callbackContent != null">
        callback_content = #{record.callbackContent,jdbcType=VARCHAR},
      </if>
      <if test="record.callbackTime != null">
        callback_time = #{record.callbackTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update payment_info
    set id = #{record.id,jdbcType=BIGINT},
      order_sn = #{record.orderSn,jdbcType=VARCHAR},
      order_id = #{record.orderId,jdbcType=VARCHAR},
      alipay_trade_no = #{record.alipayTradeNo,jdbcType=VARCHAR},
      total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      subject = #{record.subject,jdbcType=VARCHAR},
      payment_status = #{record.paymentStatus,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      confirm_time = #{record.confirmTime,jdbcType=TIMESTAMP},
      callback_content = #{record.callbackContent,jdbcType=VARCHAR},
      callback_time = #{record.callbackTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaoma.pojo.PaymentInfo">
    <!--@mbg.generated-->
    update payment_info
    <set>
      <if test="orderSn != null">
        order_sn = #{orderSn,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="alipayTradeNo != null">
        alipay_trade_no = #{alipayTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="totalAmount != null">
        total_amount = #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="subject != null">
        subject = #{subject,jdbcType=VARCHAR},
      </if>
      <if test="paymentStatus != null">
        payment_status = #{paymentStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="confirmTime != null">
        confirm_time = #{confirmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="callbackContent != null">
        callback_content = #{callbackContent,jdbcType=VARCHAR},
      </if>
      <if test="callbackTime != null">
        callback_time = #{callbackTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaoma.pojo.PaymentInfo">
    <!--@mbg.generated-->
    update payment_info
    set order_sn = #{orderSn,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=VARCHAR},
      alipay_trade_no = #{alipayTradeNo,jdbcType=VARCHAR},
      total_amount = #{totalAmount,jdbcType=DECIMAL},
      subject = #{subject,jdbcType=VARCHAR},
      payment_status = #{paymentStatus,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      confirm_time = #{confirmTime,jdbcType=TIMESTAMP},
      callback_content = #{callbackContent,jdbcType=VARCHAR},
      callback_time = #{callbackTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>